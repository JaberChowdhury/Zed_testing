name: Build Zed Nightly

on:
  schedule:
    - cron: "0 0 * * *" # Runs every night at midnight UTC
  workflow_dispatch:
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        backend: [vulkan, opengl]
        include:
          - backend: vulkan
            artifact_name: zed-release
            rustflags: ""
          - backend: opengl
            artifact_name: zed-release-opengl
            rustflags: "--cfg gles"

    steps:
      - name: Enable long paths in Git
        run: |
          git config --system core.longpaths true

      - name: Enable long paths in Windows
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Install PSToml module
        shell: pwsh
        run: Install-Module -Name PSToml -Scope CurrentUser -Force

      - name: Checkout self
        uses: actions/checkout@v4

      - name: Checkout Zed
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          ref: main
          path: zed

      - name: Install rust nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasip1

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.backend }}
          workspaces: "zed -> target"

      - name: Setup rustflags
        shell: pwsh
        run: ./Parse-Rustflags.ps1 ${{ matrix.rustflags }}

      - name: Build release
        working-directory: zed
        run: cargo build --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: zed/target/release/zed.exe

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, archlinux]
        backend: [vulkan, opengl]
        include:
          - os: ubuntu-latest
            artifact_name: zed-linux
          - os: archlinux
            artifact_name: zed-arch

    steps:
      - name: Checkout self
        uses: actions/checkout@v4

      - name: Checkout Zed
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          ref: main
          path: zed

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y build-essential pkg-config libx11-dev libxi-dev libgl1-mesa-dev

      - name: Install rust nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          override: true

      - name: Build release
        working-directory: zed
        run: cargo build --release

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: zed/target/release/zed

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get the current date
        id: date
        run: echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Create release directories and zip
        run: |
          mkdir -p zed-release zed-release-opengl zed-linux zed-arch
          mv artifacts/zed-release/zed.exe zed-release/
          mv artifacts/zed-release-opengl/zed.exe zed-release-opengl/
          mv artifacts/zed-linux/zed zed-linux/
          mv artifacts/zed-arch/zed zed-arch/
          zip -r zed-windows.zip zed-release/*
          zip -r zed-windows-opengl.zip zed-release-opengl/*
          tar -czvf zed-linux.tar.gz -C zed-linux .
          tar -czvf zed-arch.tar.gz -C zed-arch .

      - name: Upload release build artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.CURRENT_DATE }}
          tag_name: ${{ env.CURRENT_DATE }}
          draft: false
          make_latest: true
          files: |
            zed-windows.zip
            zed-windows-opengl.zip
            zed-linux.tar.gz
            zed-arch.tar.gz
