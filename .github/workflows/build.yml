name: Build Zed

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # যদি কোনো প্ল্যাটফর্ম ব্যর্থ হয়, অন্যগুলো চলবে
      matrix:
        os: [windows-latest, ubuntu-latest, archlinux]
        backend: [opengl, vulkan]

    steps:
      - name: Enable long paths in Git (Windows only)
        if: runner.os == 'Windows'
        run: |
          git config --system core.longpaths true

      - name: Enable long paths in Windows Registry
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y build-essential libssl-dev pkg-config curl git \
                              libgl1-mesa-dev libvulkan-dev

      - name: Install dependencies (Arch Linux)
        if: runner.os == 'Linux' && matrix.os == 'archlinux'
        run: |
          sudo pacman -Syu --noconfirm base-devel openssl pkgconf curl git \
                                  vulkan-headers vulkan-loader libglvnd

      - name: Install PSToml module (Windows only)
        if: runner.os == 'Windows'
        shell: pwsh
        run: Install-Module -Name PSToml -Scope CurrentUser -Force

      - name: Checkout self
        uses: actions/checkout@v4

      - name: Checkout Zed repository
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          ref: main
          path: zed

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasip1

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.backend }}
          workspaces: "zed -> target"

      - name: Setup rustflags
        shell: pwsh
        run: ./Parse-Rustflags.ps1 ${{ matrix.rustflags }}

      - name: Build release
        working-directory: zed
        run: |
          if [ "${{ matrix.backend }}" == "opengl" ]; then
            cargo build --release --features "opengl"
          else
            cargo build --release --features "vulkan"
          fi
        shell: bash

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: zed-${{ matrix.os }}-${{ matrix.backend }}
          path: zed/target/release/zed
